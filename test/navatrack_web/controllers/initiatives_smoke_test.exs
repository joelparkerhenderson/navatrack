defmodule NavatrackWeb.InitiativesSmokeTest do
  import Phoenix.LiveViewTest
  use NavatrackWeb.ConnCase

  test "index", %{conn: conn} do
    conn = get(conn, ~p"/initiatives")
    response = html_response(conn, 200)
    assert response =~ "Initiatives"
    assert response =~ "Id"
    assert response =~ "Sign"
    assert response =~ "Kind"
    assert response =~ "Name"
    assert response =~ "Status"
    assert response =~ "Tags"
  end

  test "new", %{conn: conn} do
    conn = get(conn, ~p"/initiatives/new")
    response = html_response(conn, 200)
    assert response =~ "Initiatives"
    assert response =~ "Id"
    assert response =~ "Sign"
    assert response =~ "Kind"
    assert response =~ "Name"
    assert response =~ "Status"
    assert response =~ "Tags"
    assert response =~ "Introduction"
    assert response =~ "Sign"
    assert response =~ "Name"
    assert response =~ "Status"
    assert response =~ "Tags"
    assert response =~ "Contacts"
    assert response =~ "URL"
    assert response =~ "Email"
    assert response =~ "Phone"
    assert response =~ "Messaging"
    assert response =~ "Postal"
    assert response =~ "ORCID PID"
    assert response =~ "RDF Type"
    assert response =~ "AGENTS.md"
    assert response =~ "URL"
    assert response =~ "Text"
    assert response =~ "Chart"
    assert response =~ "URL"
    assert response =~ "TypeScript"
    assert response =~ "Images"
    assert response =~ "Avatar 400x400"
    assert response =~ "Splash 1080x1080 square"
    assert response =~ "Splash 1920x1080 landscape"
    assert response =~ "Splash 1920x1080 portrait"
    assert response =~ "Links"
    assert response =~ "🏠 Home"
    assert response =~ "🛎️ Concierge"
    assert response =~ "🎯 Target"
    assert response =~ "⚙️ Technical Contact"
    assert response =~ "🗓️ Calendar"
    assert response =~ "✨ AI"
    assert response =~ "💬 Chat"
    assert response =~ "📰 News"
    assert response =~ "📊 Charts"
    assert response =~ "🎥 Videos"
    assert response =~ "👷 Construction Worker"
    assert response =~ "🔮 Future"
    assert response =~ "🦋 Feature Tracker"
    assert response =~ "🐞 Bug Tracker"
    assert response =~ "Deeper Dive"
    assert response =~ "Note"
    assert response =~ "Email distribution list"
    assert response =~ "DaisyUI timeline HTML"
    assert response =~ "Org Mode"
    assert response =~ "Task list as markdown"
    assert response =~ "Ways Of Working"
    assert response =~ "Objectives and Key Results (OKRs)"
    assert response =~ "Key Performance Indicators (KPIs)"
    assert response =~ "Business Analysis"
    assert response =~ "Six-Pager Double-Sider"
    assert response =~ "Strengths Weaknesses Opportunities Threats (SWOT)"
    assert response =~ "Porter's Five Forces"
    assert response =~ "Political, Economic, Social, Technological, Legal, Environmental (PESTLE)"
    assert response =~ "Touchpoints"
    assert response =~ "Glossary"
    assert response =~ "Roles and Responsibilities"
    assert response =~ "Responsibility Assignment Matrix (RAM)"
    assert response =~ "Code of Conduct"
    assert response =~ "License"
    assert response =~ "Arc42"
    assert response =~ "Arc42 full documentation"
    assert response =~ "Arc42 sections"
    assert response =~ "Arc42 section 01: Introduction and Goals"
    assert response =~ "Arc42 section 02: Constraints"
    assert response =~ "Arc42 section 03: Context and Scope"
    assert response =~ "Arc42 section 04: Solution Strategy"
    assert response =~ "Arc42 section 05: Building Block View"
    assert response =~ "Arc42 section 06: Runtime View"
    assert response =~ "Arc42 section 07: Deployment View"
    assert response =~ "Arc42 section 08: Crosscutting Concerns"
    assert response =~ "Arc42 section 09: Architectural Decisions"
    assert response =~ "Arc42 section 10: Quality Requirements"
    assert response =~ "Arc42 section 11: Risks and Technical Debt"
    assert response =~ "Arc42 section 12: Glossary"
    assert response =~ "Explain"
    assert response =~ "Explain Stakeholders"
    assert response =~ "Explain History"
    assert response =~ "Explain Authentication"
    assert response =~ "Explain Authorization"
    assert response =~ "Explain Use Cases"
    assert response =~ "Explain Demographics"
    assert response =~ "Explain UI"
    assert response =~ "Explain API"
    assert response =~ "Explain Data"
    assert response =~ "Explain Mobile"
    assert response =~ "Explain Legal"
    assert response =~ "Explain Financial"
    assert response =~ "Explain Service Level Agreement (SLA)"
    assert response =~ "Explain Disaster Recover (DR)"
    assert response =~ "System Quality Attributes"
    assert response =~ "Availability"
    assert response =~ "Certifiability"
    assert response =~ "Compatibility"
    assert response =~ "Efficiency"
    assert response =~ "Governability"
    assert response =~ "Maintainability"
    assert response =~ "Observability"
    assert response =~ "Operability"
    assert response =~ "Recoverability"
    assert response =~ "Scalability"
    assert response =~ "Security"
    assert response =~ "Suitability"
    assert response =~ "Testability"
    assert response =~ "Transferability"
    assert response =~ "Translatability"
    assert response =~ "Warrantability"
    assert response =~ "Net Promoter Score"
    assert response =~ "Customer Net Promoter Score (CNPS)"
    assert response =~ "User Net Promoter Score (UNPS)"
    assert response =~ "Worker Net Promoter Score (WNPS)"
    assert response =~ "User Metrics"
    assert response =~ "Active Users"
    assert response =~ "Uptime Percentage"
    assert response =~ "Burn Rate"
    assert response =~ "Net Cash Per Week"
    assert response =~ "Hours Per Week"
    assert response =~ "Earned Value Management (EVM)"
    assert response =~ "Planned Value (PV)"
    assert response =~ "Earned Value (EV)"
    assert response =~ "Actual Cost (AC)"
    assert response =~ "Total Project Control (TPC)"
    assert response =~ "DIPP"
    assert response =~ "Progress Index (ratio)"
    assert response =~ "Progress Index (numerator)"
    assert response =~ "Progress Index (denominator)"
    assert response =~ "Expected Monetary Value"
    assert response =~ "Cost Estimate To Complete"
    assert response =~ "DORA Metrics"
    assert response =~ "Code Metrics"
    assert response =~ "Maintainability Index"
    assert response =~ "Line Count"
    assert response =~ "Test Automation Code Coverage"
    assert response =~ "Halstead Complexity Volume"
    assert response =~ "Halstead Complexity Difficulty"
    assert response =~ "Halstead Complexity Effort"
  end

  # test "create", %{conn: conn} do
  #   {:ok, lv, _html} = live(conn, ~p"/initiatives/new")

  #   result =
  #     lv
  #     |> form("#x_form", %{
  #       "form[name]" => "alfa"
  #     })
  #     |> render_submit()

  #   case result do
  #     {:error, {:live_redirect, %{to: path}}} ->
  #       assert path == "/initiatives"
  #     html when is_binary(html) ->
  #       assert html =~ "Initiatives"
  #     other ->
  #       flunk("Unexpected result: #{inspect(other)}")
  #   end
  # end

end
